(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{464:function(t,a,r){"use strict";r.r(a);var s=r(53),i=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"git-的主要操作命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-的主要操作命令"}},[t._v("#")]),t._v(" Git 的主要操作命令:")]),t._v(" "),r("h4",{attrs:{id:"git-init-初始化-相当于把该目录下的文件-添加到git-的本地仓储中-就是创建了git针对这个文件的仓储"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-init-初始化-相当于把该目录下的文件-添加到git-的本地仓储中-就是创建了git针对这个文件的仓储"}},[t._v("#")]),t._v(" git init 初始化  ---- 相当于把该目录下的文件,添加到git 的本地仓储中,就是创建了git针对这个文件的仓储")]),t._v(" "),r("h4",{attrs:{id:"git-add-把该文件下的所有文件都添加到git-的临时存储区域"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-add-把该文件下的所有文件都添加到git-的临时存储区域"}},[t._v("#")]),t._v(" git add .   把该文件下的所有文件都添加到git 的临时存储区域;")]),t._v(" "),r("h4",{attrs:{id:"git-commit-m-注释-把该临时存储区域的文件项目添加版本注释-并且添加到真正本地仓储区域"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-m-注释-把该临时存储区域的文件项目添加版本注释-并且添加到真正本地仓储区域"}},[t._v("#")]),t._v(' git commit -m " 注释"  ;  把该临时存储区域的文件项目添加版本注释,并且添加到真正本地仓储区域')]),t._v(" "),r("h4",{attrs:{id:"git-commit-amend-默认修改最后一个版本号的备注"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-amend-默认修改最后一个版本号的备注"}},[t._v("#")]),t._v(" git commit --amend 默认修改最后一个版本号的备注;")]),t._v(" "),r("h4",{attrs:{id:"git-status-如果被添加到暂存区-该文件显示绿色"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-status-如果被添加到暂存区-该文件显示绿色"}},[t._v("#")]),t._v(" git status:  如果被添加到暂存区,该文件显示绿色,")]),t._v(" "),r("h4",{attrs:{id:"git-log-查看当前正则执行的版本号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-log-查看当前正则执行的版本号"}},[t._v("#")]),t._v(" git log  查看当前正则执行的版本号")]),t._v(" "),r("h4",{attrs:{id:"git-log-oneline-查看版本号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-log-oneline-查看版本号"}},[t._v("#")]),t._v(" git log --oneline   查看版本号;")]),t._v(" "),r("h4",{attrs:{id:"git-reset-hard-id号-通过版本号回滚到对应的版本"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-hard-id号-通过版本号回滚到对应的版本"}},[t._v("#")]),t._v(" git reset --hard  id号  通过版本号回滚到对应的版本")]),t._v(" "),r("h4",{attrs:{id:"git-rm-cached-文件名-移除暂缓区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-rm-cached-文件名-移除暂缓区"}},[t._v("#")]),t._v(" git rm --cached ./文件名  移除暂缓区")]),t._v(" "),r("h4",{attrs:{id:"git-checkout-选择当前目录下的所有文件进行替换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-选择当前目录下的所有文件进行替换"}},[t._v("#")]),t._v(" git checkout .    选择当前目录下的所有文件进行替换")]),t._v(" "),r("h4",{attrs:{id:"git-checkout-文件名-选择某一个文件进行替换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-文件名-选择某一个文件进行替换"}},[t._v("#")]),t._v(" git checkout ./文件名        选择某一个文件进行替换")]),t._v(" "),r("h5",{attrs:{id:"注意"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意:")]),t._v(" "),r("h5",{attrs:{id:"_1-只有把文件通过-git-commit-m-版本号注释-添加到本地仓储之后-该html文件或者其他文件就正式被git来管理监控了"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-只有把文件通过-git-commit-m-版本号注释-添加到本地仓储之后-该html文件或者其他文件就正式被git来管理监控了"}},[t._v("#")]),t._v(' 1.只有把文件通过 git commit -m "版本号注释"   ,添加到本地仓储之后,该html文件或者其他文件就正式被git来管理监控了.')]),t._v(" "),r("h5",{attrs:{id:"_2-如果当前的版本号对应的html被修改了-那么就应该在-git-中重新git-add-添加到暂存区-然后重新添加到本地存储-git-commit-m-注释-才可以"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-如果当前的版本号对应的html被修改了-那么就应该在-git-中重新git-add-添加到暂存区-然后重新添加到本地存储-git-commit-m-注释-才可以"}},[t._v("#")]),t._v(' 2.如果当前的版本号对应的html被修改了, 那么就应该在 git 中重新git add . 添加到暂存区 , 然后重新添加到本地存储 git commit -m "注释" ,才可以.')]),t._v(" "),r("h2",{attrs:{id:"git-操作远程仓储的常用命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-操作远程仓储的常用命令"}},[t._v("#")]),t._v(" Git 操作远程仓储的常用命令:")]),t._v(" "),r("h4",{attrs:{id:"git-remote-add-origin-远程仓储ssh地址-进行关联"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-remote-add-origin-远程仓储ssh地址-进行关联"}},[t._v("#")]),t._v(" git remote add origin 远程仓储ssh地址 进行关联;")]),t._v(" "),r("h4",{attrs:{id:"git-remove-rm-origin-删除关联远程仓储"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-remove-rm-origin-删除关联远程仓储"}},[t._v("#")]),t._v(" git remove rm origin 删除关联远程仓储")]),t._v(" "),r("h4",{attrs:{id:"git-push-u-origin-master-进行第一次推送"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-push-u-origin-master-进行第一次推送"}},[t._v("#")]),t._v(" git push -u origin master 进行第一次推送")]),t._v(" "),r("h4",{attrs:{id:"git-clone-ssh-地址-进行克隆"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-clone-ssh-地址-进行克隆"}},[t._v("#")]),t._v(" git clone +ssh 地址  进行克隆")]),t._v(" "),r("h4",{attrs:{id:"git-clone-b-分支名-克隆其他分支名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-clone-b-分支名-克隆其他分支名"}},[t._v("#")]),t._v(" git clone -b 分支名 克隆其他分支名")]),t._v(" "),r("h4",{attrs:{id:"git-branch-al-查看本地和远程的所有分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-branch-al-查看本地和远程的所有分支"}},[t._v("#")]),t._v(" git  branch -al 查看本地和远程的所有分支")]),t._v(" "),r("h4",{attrs:{id:"git-pull-origin-master-第一次下拉"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-pull-origin-master-第一次下拉"}},[t._v("#")]),t._v(" git pull origin master 第一次下拉")]),t._v(" "),r("h4",{attrs:{id:"git-checkout-master-切换到主分支上"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-master-切换到主分支上"}},[t._v("#")]),t._v(" git checkout master 切换到主分支上")]),t._v(" "),r("h4",{attrs:{id:"git-merge-合并的分支名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-merge-合并的分支名"}},[t._v("#")]),t._v(" git merge 合并的分支名")]),t._v(" "),r("h4",{attrs:{id:"git-branch-d-分支名-删除已经合并的分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-branch-d-分支名-删除已经合并的分支"}},[t._v("#")]),t._v(" git branch -d 分支名 删除已经合并的分支")]),t._v(" "),r("h4",{attrs:{id:"git-branch-d-分支名-不管合并与否-强制删除该分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-branch-d-分支名-不管合并与否-强制删除该分支"}},[t._v("#")]),t._v(" git branch -D 分支名  不管合并与否,强制删除该分支")]),t._v(" "),r("h4",{attrs:{id:"gitignore的后缀里面的配置的目录不进行上传设置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gitignore的后缀里面的配置的目录不进行上传设置"}},[t._v("#")]),t._v(" .gitignore的后缀里面的配置的目录不进行上传设置.")]),t._v(" "),r("h2",{attrs:{id:"解决冲突的办法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突的办法"}},[t._v("#")]),t._v(" 解决冲突的办法?")]),t._v(" "),r("h4",{attrs:{id:"谁给的冲突谁去解决-需要协商-进行修改代码操作-保留一个执行结果-重新上传更新-并加入的主分支上"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#谁给的冲突谁去解决-需要协商-进行修改代码操作-保留一个执行结果-重新上传更新-并加入的主分支上"}},[t._v("#")]),t._v(" 谁给的冲突谁去解决, 需要协商,进行修改代码操作,保留一个执行结果,重新上传更新,并加入的主分支上.")]),t._v(" "),r("h5",{attrs:{id:"注意-解决冲突是一次新的文件更改-如果解决了-需要重新更新到暂存区-并进行版本更改-重新提交一个新的历史版本"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#注意-解决冲突是一次新的文件更改-如果解决了-需要重新更新到暂存区-并进行版本更改-重新提交一个新的历史版本"}},[t._v("#")]),t._v(" 注意: 解决冲突是一次新的文件更改,如果解决了,需要重新更新到暂存区,并进行版本更改(重新提交一个新的历史版本)")]),t._v(" "),r("h4",{attrs:{id:"如图-代表遇到冲突"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如图-代表遇到冲突"}},[t._v("#")]),t._v(" 如图:(代表遇到冲突)")]),t._v(" "),r("h4",{attrs:{id:""}},[r("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/img/ct.png"),alt:"foo"}})]),t._v(" "),r("h2",{attrs:{id:"总结概况工作中实际的情况-踩过坑"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结概况工作中实际的情况-踩过坑"}},[t._v("#")]),t._v(" 总结概况工作中实际的情况!!!!!!!!!(踩过坑)")]),t._v(" "),r("h5",{attrs:{id:"git流程："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git流程："}},[t._v("#")]),t._v(" git流程：")]),t._v(" "),r("h5",{attrs:{id:"•-1-入职"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-1-入职"}},[t._v("#")]),t._v(" • 1.入职")]),t._v(" "),r("h5",{attrs:{id:"•-2-私有：ssh地址；"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-2-私有：ssh地址；"}},[t._v("#")]),t._v(" • 2.私有：SSH地址；")]),t._v(" "),r("h5",{attrs:{id:"•-2-本地：git-clone-ssh地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-2-本地：git-clone-ssh地址"}},[t._v("#")]),t._v(" • 2.本地：git clone SSH地址")]),t._v(" "),r("h5",{attrs:{id:"•-要不新建本地仓储？不要！"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-要不新建本地仓储？不要！"}},[t._v("#")]),t._v(" • 要不新建本地仓储？不要！")]),t._v(" "),r("h5",{attrs:{id:"•-克隆：复制，文件夹有-git"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-克隆：复制，文件夹有-git"}},[t._v("#")]),t._v(" • 克隆：复制，文件夹有.git")]),t._v(" "),r("h5",{attrs:{id:"•-3-进入该文件夹：查看所有分支；git-branch【去确认-开发代码合并到哪个分支上！】"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-3-进入该文件夹：查看所有分支；git-branch【去确认-开发代码合并到哪个分支上！】"}},[t._v("#")]),t._v(" • 3.进入该文件夹：查看所有分支；git branch【去确认#开发代码合并到哪个分支上！】")]),t._v(" "),r("h5",{attrs:{id:"•-4-创建新分支：看当前在哪个分支上，创建新的分支依据-于当前分支复制出来的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-4-创建新分支：看当前在哪个分支上，创建新的分支依据-于当前分支复制出来的"}},[t._v("#")]),t._v(" • 4.创建新分支：看当前在哪个分支上，创建新的分支依据#于当前分支复制出来的!!!!!!!!!!!!!!")]),t._v(" "),r("h5",{attrs:{id:"•-比如现在在master-创建-zs-（复制谁master）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-比如现在在master-创建-zs-（复制谁master）"}},[t._v("#")]),t._v(" • 比如现在在master ,创建 zs  （复制谁master）")]),t._v(" "),r("h5",{attrs:{id:"•-比如现在在zs，创建abc分支（复制谁zs）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-比如现在在zs，创建abc分支（复制谁zs）"}},[t._v("#")]),t._v(" • 比如现在在zs，创建abc分支（复制谁zs）")]),t._v(" "),r("h5",{attrs:{id:"•-5-zs分支上继续开发："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-5-zs分支上继续开发："}},[t._v("#")]),t._v(" • 5.zs分支上继续开发：")]),t._v(" "),r("h5",{attrs:{id:"•-开完完成！测试ok！"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-开完完成！测试ok！"}},[t._v("#")]),t._v(" • 开完完成！测试OK！")]),t._v(" "),r("h5",{attrs:{id:"•-pull：回到业务分支上，第一次下拉-git-pull-origin-业务分支，后几次-git-pull"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-pull：回到业务分支上，第一次下拉-git-pull-origin-业务分支，后几次-git-pull"}},[t._v("#")]),t._v(" • pull：回到业务分支上，第一次下拉  git pull origin 业务分支，后几次  git pull")]),t._v(" "),r("h5",{attrs:{id:"•-站在当前业务分支，合并你的分支代码，-git-merge-你的分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-站在当前业务分支，合并你的分支代码，-git-merge-你的分支"}},[t._v("#")]),t._v(" • 站在当前业务分支，合并你的分支代码，  git merge 你的分支")]),t._v(" "),r("h5",{attrs:{id:"•-出现冲突："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-出现冲突："}},[t._v("#")]),t._v(" • 出现冲突：")]),t._v(" "),r("h5",{attrs:{id:"•-git窗口-（业务分支名-merging）没有合并完成"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-git窗口-（业务分支名-merging）没有合并完成"}},[t._v("#")]),t._v(" • git窗口   （业务分支名|merging）没有合并完成")]),t._v(" "),r("h5",{attrs:{id:"•-解决冲突：找到冲突文件：保留一方，获取全部保留！"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-解决冲突：找到冲突文件：保留一方，获取全部保留！"}},[t._v("#")]),t._v(" • 解决冲突：找到冲突文件：保留一方，获取全部保留！")]),t._v(" "),r("h5",{attrs:{id:"•-在业务分支记录下这次冲突：git-add-git-commit-m-描述这次冲突：解决"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-在业务分支记录下这次冲突：git-add-git-commit-m-描述这次冲突：解决"}},[t._v("#")]),t._v(' • 在业务分支记录下这次冲突：git add .      git commit -m "描述这次冲突：解决"')]),t._v(" "),r("h5",{attrs:{id:"•-git窗口-（业务分支名）-解决冲突完成"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-git窗口-（业务分支名）-解决冲突完成"}},[t._v("#")]),t._v(" • git窗口   （业务分支名）  解决冲突完成")]),t._v(" "),r("h5",{attrs:{id:"•-推到代码-git-push-u-origin-业务分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#•-推到代码-git-push-u-origin-业务分支"}},[t._v("#")]),t._v(" • 推到代码  git push -u origin 业务分支")])])}),[],!1,null,null,null);a.default=i.exports}}]);